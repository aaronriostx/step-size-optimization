#! /usr/bin/env python

import numpy as np
import pathlib

# Inherit parent construction environment
Import("env") # type: ignore

# Set project paths
sso_package_abspath = env["sso_package_abspath"]

# Workflow variables
build_directory = pathlib.Path(Dir(".").abspath)
workflow_name = build_directory.name

# Initialize workflow to build alias for targets
workflow = []

# Define input arguments for the Gill optimizer
def my_func(x):
    try:
        return np.exp(x)/np.sqrt(np.sin(x)**3 + np.cos(x)**3)
    except RuntimeWarning:
        return 0
    except ZeroDivisionError:
        return 0
machine_epsilon

python_script = "gill_step_size_optimizer.py"
script_options = f"--func {func} "
script_options += f"--evaluation_point {evaluation_point} "
script_options += f"--evaluation_point {evaluation_point} "
script_options += f"--error_bound {error_bound} "
script_options += f"--conditional_error_bounds {conditional_error_bounds}"

workflow.extend(env.PythonScript(
    target = [],
    source = [f"{sso_package_abspath / python_script}"],
    script_options = script_options
))

# Collector alias based on parent directory name
env.Alias(workflow_name, workflow)